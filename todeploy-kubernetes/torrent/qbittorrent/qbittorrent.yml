---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qbittorrent-config
  namespace: torrent
data:

  # Init script for vpn container
  set-goose.sh: |-
    #!/bin/sh
    set -eu
    apt-get update
    apt-get install openvpn iputils-ping net-tools curl  jq -y
    sysctl net.ipv4.ip_forward=1
    echo "## VPN Installs complete"
    /usr/sbin/openvpn /etc/openvpn/ovpnfiles/cert4.conf   &
    sleep infinity

  # Init script for qbit container
  run-qbittorrent.sh: |-
    #!/bin/sh
    set -eu
    apk update
    apk add iputils net-tools curl jq
    sysctl net.ipv4.ip_forward=1
    SLEEPTIME=80
    echo "## Sleeping $SLEEPTIME seconds to wait for VPN..."
    sleep $SLEEPTIME
    /init
 
  vpn-delete-route.sh: |-
    #!/bin/sh
    echo "## In VPN DELETE ROUTE AFTER IF UP IN .OVPN"
    export VPN_GATEWAY=$(route -n | awk 'NR==3' | awk '{ print $2 }')
    echo "GATEWAY: $VPN_GATEWAY"
    # bash -c "sleep 3 && echo 'Deleting $VPN_GATEWAY' && ip route del 0.0.0.0/1 via $VPN_GATEWAY && curl ipinfo.io && echo '## Finished delete route' "&
    bash -c "sleep 2 && ip route add 10.244.0.0/16 via 169.254.1.1 dev eth0" &
  
  qBittorrent.conf: |-
    [AutoRun]
    enabled=false
    program=

    [BitTorrent]
    Session\Categories=@Variant(\0\0\0\b\0\0\0\x2\0\0\0\f\0s\0\x65\0r\0i\0\x65\0s\0\0\0\n\0\0\0\"\0/\0\x64\0o\0w\0n\0l\0o\0\x61\0\x64\0s\0/\0s\0\x65\0r\0i\0\x65\0s\0\0\0\f\0m\0o\0v\0i\0\x65\0s\0\0\0\n\0\0\0\"\0/\0\x64\0o\0w\0n\0l\0o\0\x61\0\x64\0s\0/\0m\0o\0v\0i\0\x65\0s)
    Session\CreateTorrentSubfolder=true
    Session\DisableAutoTMMByDefault=false
    Session\DisableAutoTMMTriggers\CategoryChanged=false
    Session\DisableAutoTMMTriggers\CategorySavePathChanged=false
    Session\DisableAutoTMMTriggers\DefaultSavePathChanged=false

    [Core]
    AutoDeleteAddedTorrentFile=Never

    [LegalNotice]
    Accepted=true

    [Preferences]
    Bittorrent\AddTrackers=false
    Bittorrent\MaxRatioAction=0
    Bittorrent\PeX=true
    Connection\GlobalDLLimitAlt=10
    Connection\GlobalUPLimitAlt=10
    Connection\Interface=tun0
    Connection\PortRangeMin=6881
    Connection\UPnP=false
    Downloads\PreAllocation=true
    Downloads\SavePath=/downloads/
    Downloads\ScanDirsV2=@Variant(\0\0\0\x1c\0\0\0\0)
    Downloads\StartInPause=false
    Downloads\TempPath=/downloads/incomplete/
    Downloads\UseIncompleteExtension=true
    DynDNS\DomainName=changeme.dyndns.org
    DynDNS\Enabled=false
    DynDNS\Password=
    DynDNS\Service=0
    DynDNS\Username=
    General\Locale=
    General\UseRandomPort=false
    MailNotification\email=
    MailNotification\enabled=false
    MailNotification\password=adminadmin
    MailNotification\req_auth=true
    MailNotification\req_ssl=false
    MailNotification\sender=qBittorrent_notification@example.com
    MailNotification\smtp_server=smtp.changeme.com
    MailNotification\username=admin
    Queueing\QueueingEnabled=false
    WebUI\Address=*
    WebUI\AlternativeUIEnabled=false
    WebUI\AuthSubnetWhitelist=0.0.0.0/32, 0.0.0.0/0
    WebUI\AuthSubnetWhitelistEnabled=true
    WebUI\CSRFProtection=true
    WebUI\ClickjackingProtection=true
    WebUI\HTTPS\Enabled=false
    WebUI\HostHeaderValidation=true
    WebUI\LocalHostAuth=false
    WebUI\Port=8088
    WebUI\RootFolder=
    WebUI\ServerDomains=*
    WebUI\UseUPnP=true
    WebUI\Username=admin
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
  namespace: torrent
  labels:
    app: qbittorrent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qbittorrent
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      # NonEssential
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: la1r.workload/nonessential
                operator: In
                values:
                - "true"
      # dnsConfig:
      #   # Not sure if this is really needed...
      #   nameservers:
      #     - 8.8.8.8
      # dnsPolicy: None
      # dnsPolicy: Default
      # hostNetwork: true
      volumes:
      - name: goose-credentials-volume
        secret:
          secretName: goose-credentials
          items:
          - key: login.conf
            path: login.conf
          defaultMode: 0600
      - name: set-goose-ovpn-volume
        secret:
          secretName: goose-credentials
          defaultMode: 0744
      - name: update-resolv-conf
        configMap:
          name: qbittorrent-config
          items:
          - key: update-resolv-conf
            path: update-resolv-conf-custom
          defaultMode: 0777
      - name: qbittorrent-config-client
        configMap:
          name: qbittorrent-config
          items:
          - key: qBittorrent.conf
            path: qBittorrent.conf
          defaultMode: 0744
      - name: qbittorrent-config-goose
        configMap:
          name: qbittorrent-config
          items:
          - key: set-goose.sh
            path: set-goose.sh
          defaultMode: 0744
      - name: qbittorrent-config-qbit
        configMap:
          name: qbittorrent-config
          items:
          - key: run-qbittorrent.sh
            path: run-qbittorrent.sh
          defaultMode: 0744
      
      - name: vpn-delete-route
        configMap:
          name: qbittorrent-config
          items:
          - key: vpn-delete-route.sh
            path: vpn-delete-route.sh
          defaultMode: 0744
      
      # - name: torrent-volume
      #   persistentVolumeClaim:
      #     claimName: torrent-data-claim
      # - name: qbittorrent-state
      #   persistentVolumeClaim:
      #     claimName: qbittorrent-state-claim

      containers:
      - name: vpn
        resources: 
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        image: ubuntu
        command: [ "/goose/set-goose.sh"]
        # stdin: true
        # tty: true
        securityContext:
          allowPrivilegeEscalation: true
          privileged: true
          capabilities:
            add:
              - NET_ADMIN
        env:
        - name: TZ
          value: Europe/Amsterdam
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        volumeMounts:
          - name: qbittorrent-config-goose
            mountPath: /goose/set-goose.sh
            subPath: set-goose.sh
          - name: vpn-delete-route
            mountPath: /goose/vpn-delete-route.sh
            subPath: vpn-delete-route.sh
          - name: set-goose-ovpn-volume
            mountPath: /etc/openvpn/ovpnfiles
          - name: goose-credentials-volume
            mountPath: /goose/login.conf
            subPath: login.conf
      # - name: trans
      #   resources: 
      #     requests:
      #       memory: "256Mi"
      #       cpu: "100m"
      #     limits:
      #       memory: "2056Mi"
      #       cpu: "2000m"
      #   image: linuxserver/transmission
      #   # command: [ "/goose/run-qbittorrent.sh"]
      #   # stdin: true
      #   # tty: true
      #   securityContext:
      #     allowPrivilegeEscalation: true
      #     privileged: true
      #     capabilities:
      #       add:
      #         - NET_ADMIN
      #   ports:
      #   - name: http
      #     containerPort: 9091
      #   - name: bittorrent
      #     containerPort: 30163
      #   env:
      #   - name: TZ
      #     value: Europe/Amsterdam
      #   - name: PGID
      #     value: "1000"
      #   - name: PUID
      #     value: "1000"
      - name: qbit
        resources: 
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "2056Mi"
            cpu: "2000m"
        image: linuxserver/qbittorrent
        command: [ "/goose/run-qbittorrent.sh"]
        # stdin: true
        # tty: true
        securityContext:
          allowPrivilegeEscalation: true
          privileged: true
          capabilities:
            add:
              - NET_ADMIN
        ports:
        - name: http
          containerPort: 8088
        - name: bittorrent
          containerPort: 30163
        env:
        - name: TZ
          value: Europe/Amsterdam
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: WEBUI_PORT
          value: "8088"
        volumeMounts:
          - name: qbittorrent-config-client
            mountPath: /config/qBittorrent/qBittorrent.conf
            subPath: qBittorrent.conf
          - name: qbittorrent-config-qbit
            mountPath: /goose/run-qbittorrent.sh
            subPath: run-qbittorrent.sh
          
          # - name: torrent-volume
          #   mountPath: /downloads
          # - name: qbittorrent-state
          #   mountPath: /config


        # livenessProbe:
        #   initialDelaySeconds: 20
        #   periodSeconds: 20
        #   failureThreshold: 5
        #   exec:
        #     command:
        #       - /bin/sh
        #       - -c
        #       - 'curl ipinfo.io |  jq -r ".timezone" |  grep "Europe/Budapest"'
        # readinessProbe:
        #   initialDelaySeconds: 20
        #   periodSeconds: 10
        #   failureThreshold: 5
        #   exec:
        #     command:
        #       - /bin/sh
        #       - -c
        #       - 'curl ipinfo.io |  jq -r ".timezone" |  grep "Europe/Budapest"'

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: qbittorrent
  name: qbittorrent-nodeport
  namespace: torrent
spec:
  ports:
  - name: bittorrent
    targetPort: 30163
    nodePort: 30163
    port: 30163
  selector:
    app: qbittorrent
  type: NodePort


---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: qbittorrent
  name: qbittorrent
  namespace: torrent
spec:
  ports:
  - name: http
    targetPort: 8088
    port: 80
  selector:
    app: qbittorrent
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qbittorrentingress
  namespace: torrent
spec:
  rules:
  - host: torrent.bas
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qbittorrent
            port:
              number: 80



---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: torrent-bas
  namespace: torrent
spec:
  issuerRef:
    name: la1r
    kind: ClusterIssuer
  secretName: torrent-bas-tls
  commonName: torrent.bas
  dnsNames:
  - torrent.bas
  - www.torrent.bas
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: torrent-non-tls
  namespace: torrent
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`torrent.bas`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: qbittorrent
      port: 80
    middlewares:
    - name: http-redirect-to-https
      namespace: traefik
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: torrent-tls
  namespace: torrent
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`torrent.bas`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: qbittorrent
      port: 80
  tls:
    secretName: torrent-bas-tls

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: qbittorrent-lb-service
#   namespace: torrent
# spec:
#   ports:
#   - name: http
#     port: 80
#     targetPort: 8080
#   selector:
#     app: qbittorrent
#   type: LoadBalancer
#   externalTrafficPolicy: Local
#   loadBalancerIP: 192.168.6.61