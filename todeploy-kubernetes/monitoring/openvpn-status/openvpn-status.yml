---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openvpn-status-config
  namespace: monitoring
data:
  cfg.json: |-
    {
      "port": 80,
      "bind": "0.0.0.0",
      "servers": [
        {"id": 0, "name": "la1r", "host": "192.168.5.1","man_port": 33555}
      ],
      "username": "",
      "password": "",
      "web": {
        "dateFormat": "HH:mm - DD.MM.YY"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openvpn-status
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openvpn-status
      k8s-app: openvpn-status
  template:
    metadata:
      labels:
        task: monitoring
        app: openvpn-status
        k8s-app: openvpn-status
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: la1r.workload/essential
                operator: In
                values:
                - "true"
      containers:
      - name: openvpn-status
        ports:
        - containerPort: 80
        image: auspexeu/openvpn-status
        resources:
          requests:
            cpu: 10m
            memory: 56Mi
          limits:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: openvpn-status-settings
          mountPath: /usr/src/app/cfg.json
          subPath: cfg.json
      volumes:    
      - name: openvpn-status-settings
        configMap:
          name: openvpn-status-config
          items:
          - key: cfg.json
            path: cfg.json
          defaultMode: 0744
---
apiVersion: v1
kind: Service
metadata:
  name: openvpn-status-service
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: openvpn-status

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vpn-bas
  namespace: monitoring
spec:
  issuerRef:
    name: la1r
    kind: ClusterIssuer
  secretName: vpn-bas-tls
  commonName: vpn.bas
  dnsNames:
  - vpn.bas
  - www.vpn.bas

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vpn-https
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
spec:
  tls:
  - secretName: vpn-bas-tls
  rules:
  - host: vpn.bas
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: openvpn-status-service
            port:
              number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vpn-http
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/router.entrypoints: "web"
    traefik.ingress.kubernetes.io/router.middlewares: "traefik-http-redirect-to-https@kubernetescrd"
spec:
  rules:
  - host: vpn.bas
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: openvpn-status-service
            port:
              number: 80

