---
apiVersion: v1
metadata:
  name: blackbox-exporter-config
  namespace: monitoring
kind: ConfigMap
data:
  blackbox.yml: |-
    modules:
      icmp_ipv4:
        prober: icmp
        icmp:
          preferred_ip_protocol: ip4

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-blackbox-exporter
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: prometheus-blackbox-exporter
  template:
    metadata:
      labels:
        k8s-app: prometheus-blackbox-exporter
    spec:
      volumes:
        - name: blackbox-exporter-config-volume
          configMap:
            name: blackbox-exporter-config
            items:
              - key: blackbox.yml
                path: blackbox.yml
            defaultMode: 0744
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: la1r.workload/essential
                operator: In
                values:
                - "true"
      containers:
      - name: prometheus-blackbox-exporter
        resources:
        ports:
        - containerPort: 9115
        image: prom/blackbox-exporter:master
        args:
          - --config.file=/config/blackbox.yml
        volumeMounts:
        - name: blackbox-exporter-config-volume
          mountPath: /config/blackbox.yml
          subPath: blackbox.yml
---
apiVersion: v1
kind: Service
metadata:
  labels:
    task: monitoring
  name: prometheus-blackbox-exporter
  namespace: monitoring
spec:
  ports:
  - port: 80
    targetPort: 9115
  selector:
    k8s-app: prometheus-blackbox-exporter
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: prometheus-blackbox-exporter-bas
  namespace: monitoring
spec:
  issuerRef:
    name: la1r
    kind: ClusterIssuer
  secretName: blackbox-bas-tls
  commonName: blackbox.bas
  dnsNames:
  - blackbox.bas
  - www.blackbox.bas

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: blackbox-https
  namespace: monitoring
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
spec:
  tls:
  - secretName: blackbox-bas-tls
  rules:
  - host: blackbox.bas
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-blackbox-exporter
            port:
              number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: blackbox-http
  namespace: monitoring
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/router.entrypoints: "web"
    traefik.ingress.kubernetes.io/router.middlewares: "traefik-http-redirect-to-https@kubernetescrd"
spec:
  rules:
  - host: blackbox.bas
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-blackbox-exporter
            port:
              number: 80

