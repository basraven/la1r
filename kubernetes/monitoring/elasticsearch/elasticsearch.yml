# ---
# Source:   https://www.digitalocean.com/community/tutorials/how-to-set-up-an-elasticsearch-fluentd-and-kibana-efk-logging-stack-on-kubernetes
# Source 2: https://blog.ptrk.io/how-to-deploy-an-efk-stack-to-kubernetes/
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: elasticsearch-claim
#   namespace: efk
# spec:
#   accessModes:
#   - ReadWriteMany 
#   storageClassName: local-storage
#   selector:
#     matchLabels:
#       contenttype: "elasticsearch"
#   resources:
#     requests:
#       storage: 200Gi
# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: elasticsearch-config-claim-local
#   namespace: efk
# spec:
#   accessModes:
#   - ReadWriteMany 
#   storageClassName: local-storage
#   selector:
#     matchLabels:
#       contenttype: "elasticsearch-config-local"
#   resources:
#     requests:
#       storage: 20Gi

# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: elasticsearch-config
#   namespace: monitoring
# data:
#   # You can also do without this config file..
#   # "************************************************************************************* Found index level settings on node level configuration.  Since elasticsearch 5.x index level settings can NOT be set on the nodes  configuration like the elasticsearch.yaml, in system properties or command line  arguments.In order to upgrade all indices the settings must be updated via the  /${index}/_settings API. Unless all settings are dynamic all indices must be closed  in order to apply the upgradeIndices created in the future should use index templates  to set default values.   Please ensure all required values are updated on all indices by executing:   curl -XPUT 'http://localhost:9200/_all/_settings?preserve_existing=true' -d '{    "index.number_of_replicas " :  "0 " }' ************************************************************************************* " }
#   elasticsearch.yml: |-
#     cluster.name: "rave"
#     network.host: 0.0.0.0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: elasticsearch
  template:
    metadata:
      labels:
        task: efk
        k8s-app: elasticsearch
    spec:
      volumes:
      # - name: elasticsearch-config
        # configMap:
        #   name: elasticsearch-config
        #   items:
        #   - key: elasticsearch.yml
        #     path: elasticsearch.yml
        #   defaultMode: 0744
      - name: elasticsearch-data-volume
        persistentVolumeClaim:
          claimName: elasticsearch-data-claim
      containers:
      - name: elasticsearch
        resources:
          requests:
            memory: "256Mi"
            cpu: "150m"
          limits:
            memory: "1536Mi"
            cpu: "500m"
        ports:
        - name: http
          containerPort: 9200 
        - name: integration
          containerPort: 9300 
        volumeMounts:
        - name: elasticsearch-data-volume
          mountPath: /usr/share/elasticsearch/data
        # - name: elasticsearch-config
        #   mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
        #   subPath: elasticsearch.yml
        env:
        - name: discovery.type
          value: single-node
        - name: ELASTIC_USERNAME
          value: "admin"
        - name: ELASTIC_PASSWORD
          value: "admin"
        - name: http.cors.enabled
          value: "true"
        - name: http.cors.allow-origin
          value:  "*"
        - name: XPACK_SECURITY_ENABLED
          value: "true"
        image: elasticsearch:7.9.1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    task: efk
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: elasticsearch
  name: elasticsearch
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 80
    targetPort: 9200
  - name: interface
    port: 9200
    targetPort: 9200
  - name: integration
    port: 9300
    targetPort: 9300
  selector:
    k8s-app: elasticsearch
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: elasticsearchingress
  namespace: monitoring
spec:
  rules:
  - host: es.bas
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: elasticsearch
            port:
              number: 80