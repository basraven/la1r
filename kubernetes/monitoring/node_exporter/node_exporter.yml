---
apiVersion: v1
kind: ConfigMap
metadata:
  name: directory-size-prometheus
  namespace: monitoring
data:
  run.sh: |-
    #!/bin/sh
    while sleep 50; do
      if [ -f "/output/directory_size_$NODE_NAME.prom" ] ; then
          rm "/output/directory_size_$NODE_NAME.prom"
      fi
      /scripts/directory-size.sh  "/mnt/hdd/na" "/output/directory_size_$NODE_NAME.prom"
      /scripts/directory-size.sh  "/mnt/hdd/na/torrent" "/output/directory_size_$NODE_NAME.prom"
      /scripts/directory-size.sh  "/mnt/hdd/ha" "/output/directory_size_$NODE_NAME.prom"
      /scripts/directory-size.sh  "/mnt/ssd/na" "/output/directory_size_$NODE_NAME.prom"
      /scripts/directory-size.sh  "/mnt/ssd/ha" "/output/directory_size_$NODE_NAME.prom"
    done
  directory-size.sh: |-
    #!/bin/sh
    #
    # Expose directory usage metrics, passed as an argument.
    #
    # Usage: add this to crontab:
    #
    # */5 * * * * prometheus directory-size.sh /var/lib/prometheus /output/directory_size.prom
    #
    # sed pattern taken from https://www.robustperception.io/monitoring-directory-sizes-with-the-textfile-collector/
    #
    # Author: Antoine Beaupr√© <anarcat@debian.org>
    # echo "# HELP node_directory_size_bytes Disk space used by some directories"
    # echo "# TYPE node_directory_size_bytes gauge"
    du --block-size=1 --summarize "$1" | sed -ne 's/\\/\\\\/;s/"/\\"/g;s/^\([0-9]\+\)\t\(.*\)$/node_directory_size_bytes{directory="\2"} \1/p' >> "$2"

---
apiVersion: apps/v1
# source: https://github.com/prometheus-operator/kube-prometheus/blob/master/manifests/node-exporter-daemonset.yaml
kind: DaemonSet
metadata:
  name: node-exporter-dir-size
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: node-exporter-dir-size
  template:
    metadata:
      labels:
        app: node-exporter-dir-size
    spec:
      volumes:
      - name: directory-size-prometheus-volume
        configMap:
          name: directory-size-prometheus
          defaultMode: 0744
      - name: hdd
        hostPath:
          path: /mnt/hdd
      - name: ssd
        hostPath:
          path: /mnt/ssd        
      - name: local-metrics-dir
        hostPath:
          # Ensure the file directory is created.
          path: /tmp/metrics
          type: DirectoryOrCreate
      containers:
      - name: directory-size
        image: ubuntu # TODO: Optimize some day
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "1028Mi"
            cpu: "500m"
        command: 
          - "/scripts/run.sh" 
        volumeMounts:
          - name: directory-size-prometheus-volume
            mountPath: /scripts/
          - name: local-metrics-dir
            mountPath: /output/
          - name: hdd
            mountPath: /mnt/hdd
            mountPropagation: HostToContainer
            readOnly: true   
          - name: ssd
            mountPath: /mnt/ssd
            mountPropagation: HostToContainer
            readOnly: true   
   
---
apiVersion: apps/v1
# source: https://github.com/prometheus-operator/kube-prometheus/blob/master/manifests/node-exporter-daemonset.yaml
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      hostNetwork: true
      hostPID: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --path.procfs=/host/proc
        - --path.sysfs=/host/sys
        - --path.rootfs=/host/root
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
        - --collector.processes
        - --collector.textfile.directory=/output
        # - --no-collector.wifi
        # - --collector.systemd # FIXME: not working
        image: quay.io/prometheus/node-exporter
        name: node-exporter
        securityContext:
          capabilities:
            add: ["SYS_ADMIN"]
        resources:
          limits:
            cpu: 250m
            memory: 180Mi
          requests:
            cpu: 102m
            memory: 180Mi
        volumeMounts:
        - mountPath: /host/proc
          mountPropagation: HostToContainer
          name: proc
          readOnly: true
        - mountPath: /host/sys
          mountPropagation: HostToContainer
          name: sys
          readOnly: true
        - mountPath: /host/root
          mountPropagation: HostToContainer
          name: root
          readOnly: true      
        # - mountPath: /var/run/dbus/system_bus_socket
        #   name: system-dbus-socket #systemd # FIXME: not working
        #   readOnly: true
        - name: local-metrics-dir
          mountPath: /output
        ports:
        - containerPort: 9100
          hostPort: 9100
          name: http
      volumes:
      - hostPath:
          path: /proc
        name: proc
      - hostPath:
          path: /sys
        name: sys
      - hostPath:
          path: /
        name: root
      # - hostPath: 
      #     path: /var/run/dbus/system_bus_socket
      #   name: system-dbus-socket #systemd # FIXME: not working
      - name: local-metrics-dir
        hostPath:
          # Ensure the file directory is created.
          path: /tmp/metrics
          type: DirectoryOrCreate
