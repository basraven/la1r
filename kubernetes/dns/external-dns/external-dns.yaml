---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get","watch","list"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get","watch","list"]
  - apiGroups: ["networking","networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get","watch","list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get","watch","list"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get","watch","list"]
  - apiGroups: ["externaldns.k8s.io"]
    resources: ["dnsendpoints"]
    verbs: ["get","watch","list"]
  - apiGroups: ["externaldns.k8s.io"]
    resources: ["dnsendpoints/status"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: dns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: dns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: dns
spec:
  #strategy:
  #  type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      
      # volumes:
      #     - name: kubeconfseb
      #       secret:
      #         secretName: kubeconfseb
      containers:
      - name: external-dns
        resources:
        image: k8s.gcr.io/external-dns/external-dns:v0.13.1
        # command: ["sleep", "10000000"]
        args:
        - --source=ingress
        - --source=service
        # - --source=crd
        - --always-publish-not-ready-addresses
        - --provider=coredns
        # - --server=192.168.5.100:443
        # - --kubeconfig=/bas/config
        - --log-level=debug # debug only
        # - --dry-run # debug only
        env:
        - name: ETCD_URLS
          value: "http://10.97.63.168:2379"
        # volumeMounts:
        #   - mountPath: "/bas"
        #     name: kubeconfseb
        #     readOnly: true