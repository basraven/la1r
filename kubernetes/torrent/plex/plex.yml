---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  namespace: torrent
  labels:
    app: plex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: plex
  template:
    metadata:
      labels:
        app: plex
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution :
            nodeSelectorTerms:
            - matchExpressions:
              - key: la1r.storage/111
                operator: In
                values: [ "true" ]
      volumes:
        - name: plex-torrent-volume
          persistentVolumeClaim:
            claimName: torrent-data-claim
        - name: plex-data-volume
          persistentVolumeClaim:
            claimName: plex-data-claim
        - name: plex-transcode-volume
          persistentVolumeClaim:
            claimName: plex-transcode-claim
        - name: plex-config-volume
          persistentVolumeClaim:
            claimName: plex-config-claim
      containers:
      - name: plex
        image: plexinc/pms-docker
        resources:
          requests:
            memory: "1024Mi"
            cpu: "300m"
          limits:
            memory: "3Gi"
            cpu: "2000m"
        ports:
        - name: http
          containerPort: 32400
          hostPort: 32400
        env:
        - name: TZ
          value: "Europe//Amsterdam"
        - name: USER_ID
          value: "1000"
        - name: GROUP_ID
          value: "1000"
        - name: PLEX_CLAIM
        # https://plex.tv/claim
          value: "claim-JVc8QLPdVFn4MeVaxW8S"
        volumeMounts:
          - name: plex-torrent-volume
            mountPath: /torrent
          - name: plex-data-volume
            mountPath: /data
          - name: plex-transcode-volume
            mountPath: /transcode
          - name: plex-config-volume
            mountPath: /config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: plex
  name: plex-service
  namespace: torrent
spec:
  ports:
  - port: 80
    targetPort: 32400
  selector:
    app: plex
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: plexingress
  namespace: torrent
spec:
  rules:
  - host: plex.bas
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: plex-service
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: plex-lb-service
  namespace: torrent
spec:
  ports:
  - name: http
    port: 80
    targetPort: 32400
  selector:
    app: plex
  type: LoadBalancer
  loadBalancerIP: 192.168.6.60

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: plex-bas
  namespace: torrent
spec:
  issuerRef:
    name: la1r
    kind: ClusterIssuer
  secretName: plex-bas-tls
  commonName: plex.bas
  dnsNames:
  - plex.bas
  - www.plex.bas

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: plex-non-tls
  namespace: torrent
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`plex.bas`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: plex-service
      port: 80
    middlewares:
    - name: http-redirect-to-https
      namespace: traefik
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: plex-tls
  namespace: torrent
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`plex.bas`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: plex-service
      port: 80
  tls:
    secretName: plex-bas-tls