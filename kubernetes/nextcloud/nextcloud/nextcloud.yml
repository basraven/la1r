---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nextcloud-config
  namespace: nextcloud
data:
  set-nextcloud.sh: |-
    #!/bin/sh
    set -eu
    # TODO: Put this is a new container instead of this...
    echo "[Raven] Tuning the container..."
    echo "alias www-data='su -l www-data -s /bin/bash'" >> ~/.bashrc
    #echo ''alias scanall='su -l www-data -s /bin/bash -c "PHP_MEMORY_LIMIT=512M /var/www/html/occ files:scan --all"' '' >> ~/.bashrc
    apt-get update
    apt-get install cron -y
    echo "" >> /etc/crontab
    echo "*/15  *  *  *  * www-data php -f /var/www/html/cron.php" >> /etc/crontab
    echo "*/10  *  *  *  * www-data /var/www/html/occ preview:pre-generate" >> /etc/crontab

    # TODO: Run this:
    # /var/www/html/occ files:scan --all
    # /var/www/html/occ preview:generate-all
    # /var/www/html/occ twofactorauth:enforce --on
    service cron start
    a2enmod http2
    a2enmod ssl
    echo "Protocols h2 h2c http/1.1" >> /etc/apache2/apache2.conf
    echo "[Raven] Done tuning the container"
    /entrypoint.sh apache2-foreground

  apcu.config: |-
    <?php
    $CONFIG = array (
      'memcache.local' => '\OC\Memcache\Redis',
      'redis' => array(
        'host' => 'redis',
        'port' => 6379,
        ),
      'memcache.locking' => '\OC\Memcache\Redis',
    );
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nextcloud
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution :
            nodeSelectorTerms:
            - matchExpressions:
              - key: la1r.workload/nonessential
                operator: In
                values:
                - "true"
      volumes:
      - name: set-nextcloud-volume
        configMap:
          name: nextcloud-config
          items:
          - key: set-nextcloud.sh
            path: set-nextcloud.sh
          defaultMode: 0744
      - name: apcu-config-volume
        configMap:
          name: nextcloud-config
          items:
          - key: apcu.config.php
            path: apcu.config.php
          defaultMode: 0744
      - name: nextcloud-web
        persistentVolumeClaim:
          claimName: nextcloud-web-claim
      - name: nextcloud-data
        persistentVolumeClaim:
          claimName: nextcloud-data-claim
      containers:
      - name: nextcloud
        image: nextcloud:stable-apache
        command:
          - "/set-nextcloud/set-nextcloud.sh"
        ports:
        - containerPort: 80
        resources:
        env:
        - name: NEXTCLOUD_TABLE_PREFIX
          value: ""
        - name: NEXTCLOUD_DATA_DIR
          value: "/var/www/html/data"
        - name: MYSQL_HOST
          value: "mariadb"
        - name: MYSQL_DATABASE
          value: "nextcloud"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mariadbsecret
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadbsecret
              key: MYSQL_PASSWORD
        volumeMounts:
          - name: nextcloud-web
            mountPath: "/var/www/html"
          - name: nextcloud-data
            mountPath: "/var/www/html/data"
          - name: set-nextcloud-volume
            mountPath: /set-nextcloud
          # - name: apcu-config-volume
          #   mountPath: /var/www/html/config
          #   subPath: apcu.config.php
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nextcloud
  name: nextcloud-service
  namespace: nextcloud
spec:
  ports:
  - name: http
    port: 80
  selector:
    app: nextcloud
  type: ClusterIP
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: nextcloudingress
#   namespace: nextcloud
# spec:
#   rules:
#   - host: cloud.bas
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: nextcloud-service
#             port:
#               number: 80



---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nextcloud-bas
  namespace: nextcloud
spec:
  issuerRef:
    name: la1r
    kind: ClusterIssuer
  secretName: nextcloud-bas-tls
  commonName: nextcloud.bas
  dnsNames:
  - cloud.bas
  - www.cloud.bas
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: nextcloud-non-tls
  namespace: nextcloud
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`cloud.bas`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: nextcloud-service
      port: 80
    middlewares:
    - name: http-redirect-to-https
      namespace: traefik
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: nextcloud-tls
  namespace: nextcloud
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`cloud.bas`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: nextcloud-service
      port: 80
  tls:
    secretName: nextcloud-bas-tls